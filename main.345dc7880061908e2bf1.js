(()=>{"use strict";class t{constructor(){this._best=parseInt(localStorage.getItem("best")||"0")}get best(){return this._best}set best(t){this._best=t,localStorage.setItem("best",this._best.toString())}}class e{constructor(t){this.root=document.documentElement,this.score=document.getElementById("score"),this.best=document.getElementById("best-score"),this.board=document.getElementById("grid"),this.initializeAnimations(t)}initializeAnimations(t){this.best.onanimationend=()=>{this.best.classList.remove("best-animate"),this.root.style.setProperty("--old-best",`"${t.best}"`),t.oldBest=t.best},this.score.onanimationend=()=>{this.score.classList.remove("animate"),this.root.style.setProperty("--old",`"${t.score}"`)}}updateScore(t){this.root.style.setProperty("--new",`"${t.score}"`),this.score.classList.add("animate")}updateBest(t){this.root.style.setProperty("--new-best",`"${t.best}"`),this.best.classList.add("best-animate")}renderBoard(t){this.clear(),this.root.style.setProperty("--x",t.board.x.toString()),this.root.style.setProperty("--y",t.board.y.toString()),this.root.style.setProperty("--color",t.board.color.toCSS()),this.root.style.setProperty("--different",t.board.otherColor.toCSS());for(let e=0;e<t.board.numberOfSquares;e++){const s=document.createElement("div");s.classList.add("box"),s.addEventListener(this.getHandlerType(),(e=>{e.preventDefault(),e.target.classList[1]?(t.score+=1,t.score>t.best&&(t.best+=1)):t.score=0}),!1),e===t.board.chosen&&s.classList.add("different"),this.board.appendChild(s)}}getHandlerType(){return/iPad|iPhone|iPod/.test(navigator.platform)?"touchstart":"click"}clear(){for(var t;null===(t=this.board)||void 0===t?void 0:t.firstChild;)this.board.removeChild(this.board.lastChild)}}class s{constructor(t,e,s){this.h=t,this.s=e,this.l=s}toCSS(){return`hsl(${this.h},${this.s}%,${this.l}%)`}}class r{constructor(t){[this.color,this.otherColor]=this.genColors(t)}genColors(t){const e=Math.ceil(150*Math.pow(.97,t.score)),r=new s(Math.floor(360*Math.random()),100-Math.floor(Math.random()*(e/150)*50),Math.random()<.5?50-Math.floor(25*Math.random()/Math.sqrt(e)):50+Math.floor(25*Math.random()/Math.sqrt(e)));return[r,this.getOtherColor(r,e)]}getOtherColor(t,e){const r=Math.random()<.5?t.l+e/5:t.l-e/5;return new s(t.h,t.s,r)}}class o{constructor(t){[this.colors,this._numberOfSquares,this._chosen,this.dimensions]=this.generateBoard(t)}getBoardDimensions(t){let e=t,s=1;for(const r of[2,3,4])t%r==0&&t/r!=1&&(e=t/r,s=r);return[e,s]=[e,s].sort(),{x:e,y:s}}getChosen(t){return Math.floor(Math.random()*t)}getNumberOfSquares(t){if(t.score>=14)return 20;let e=t.score+3;for(;[7,11,13,14,17,18,19].includes(e);)e+=1;return e}generateBoard(t){return this.colors=new r(t),this._numberOfSquares=this.getNumberOfSquares(t),this._chosen=this.getChosen(this._numberOfSquares),this.dimensions=this.getBoardDimensions(this._numberOfSquares),[this.colors,this._numberOfSquares,this._chosen,this.dimensions]}get color(){return this.colors.color}get otherColor(){return this.colors.otherColor}get chosen(){return this._chosen}get numberOfSquares(){return this._numberOfSquares}get x(){return this.dimensions.x}get y(){return this.dimensions.y}}"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("service-worker.js").then((t=>{console.log("SW registered: ",t)})).catch((t=>{console.log("SW registration failed: ",t)}))})),(new class{constructor(){this.localStore=new t,this._score=0,this._best=this.localStore.best,this._oldBest=this._best-1,this.gameView=new e(this),this.board=new o(this)}start(){this.board.generateBoard(this),this.gameView.updateScore(this),this.gameView.updateBest(this),this.gameView.renderBoard(this)}get best(){return this._best}set best(t){this._best=t,this.localStore.best=t,this.gameView.updateBest(this)}get score(){return this._score}set score(t){this._score=t,this.board.generateBoard(this),this.gameView.updateScore(this),this.gameView.renderBoard(this)}get oldBest(){return this._oldBest}set oldBest(t){this._oldBest=t}}).start()})();